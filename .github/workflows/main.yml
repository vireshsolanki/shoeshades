name: website deployment
on:
  push:
    branches:
    - main
jobs:
  deploy:
    name: deploy to staging
    runs-on: self-hosted
    steps:    
    
    # - name: Setup Python
    #   uses: actions/setup-python@v2
    #   with:
    #      python-version: "2.7"
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Setup docker buildx
      uses: docker/setup-buildx-action@v3.0.0
    - name: docker login
      uses: docker/login-action@v3.0.0
      with:
        username: ${{secrets.DOCKER_USERNAME}}
        password: ${{secrets.DOCKER_PASSWORD}}
      #run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
    - name: build and push
      run: |
        docker build -t vireshsolanki/myproject:1.0 .
        docker push vireshsolanki/myproject:1.0
      env:
        DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
    
    - name: Install dependencies
      run: pip3 install -r requirements.txt
    - name: Set up AWS credentials
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_KEY }}
        AWS_DEFAULT_REGION: ap-south-1 # Change to your desired AWS region
      run: |
        aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
        aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
        aws configure set region $AWS_DEFAULT_REGION
    # - name: Verify Kubeconfig
    #   run: kubectl config get-contexts
    - name: authenticate eks
      run: aws eks --region ap-south-1 update-kubeconfig --name eks
    # - name: List EKS Clusters
    #   run: aws eks list-clusters --region ap-south-1
    # - name: get context
    #   run: kubectl config get-contexts
    # - name: Check kubectl Version
    #   run: kubectl version --client
    # # - name: Authenticate with Kubernetes Cluster
    #   run: kubectl config use-context 
    # - name: dry check
    #   run: kubectl get svc
    - name: delete namespace 
      run : kubectl delete namespace my-namespace

    - name: create namespace
      run: kubectl create namespace my-namespace
    - name: deploy to eks
      run: kubectl apply -f secret.yml
    - name: deploy service to eks
      run: kubectl apply -f service.yml
    - name: deploy to eks
      run: kubectl apply -f deployment.yml
    - name: run database migrations
      run: |
        kubectl exec -it deployment/my-django-app -n my-namespace -- python manage.py migrate
      env:
        DJANGO_SETTINGS_MODULE: "shoeshade.settings"
      
        
   
